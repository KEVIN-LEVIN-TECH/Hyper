const { cmd, commands } = require('../command');
const config = require('../config');
const os = require('os');
const { getBuffer, getGroupAdmins, getRandom, h2k, isUrl, Json, fetchJson , runtime ,sleep } = require('../DATABASE/functions')
const { checkAccess, isPremiumUser, blacklistedJIDs, premiumJIDs, dataLoaded } = require('../DATABASE/accessControl');
const mono = "```"

    function detectPlatform() {
      if (process.env.REPL_ID) return 'Replit';
      if (process.env.HEROKU_APP_NAME) return 'Heroku';
      if (process.env.KOYEB_PROJECT_ID) return 'Koyeb';
      if (process.env.AWS_LAMBDA_FUNCTION_NAME) return 'AWS Lambda';
      if (process.env.VERCEL) return 'Vercel';
      if (process.env.RENDER) return 'Render';
      if (process.env.NETLIFY) return 'Netlify';
      if (process.env.WORKFLOW) return 'Workflow';
      if (process.env.FLYIO_APP_NAME) return 'Fly.io';
      return 'Unknown Platform';
    }
    const platformName = detectPlatform();

    

cmd({
      pattern: "runtime",
      desc: "Chek Bot Runtime",
      category: "main",
      react: "‚è∞",
      filename: __filename
    }, async (conn, mek, m, { from, reply }) => {
      try {

          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent


          let desc = `üöÄ ùñ±ùóéùóáùóçùóÇùóÜùñæ : ${uptime}`

          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `Runtime ‚è∞`,
              body: `https://HYPER-md-main-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });


        




cmd({
      pattern: "alive",
      alias: ["online"],
      desc: "Chek Bot Alive",
      category: "main",
      react: "üßöüèª‚Äç‚ôÄÔ∏è",
      filename: __filename
    },
    
    async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
    try{

          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent


          let desc = `üëã Hello ${pushname}

üë®‚Äçüíªüá±üá∞ I'm HYPER-MD-V1 Whatsapp Bot

> Platform :  ${os.hostname()}
> Ram Usage : ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB
> Runtime : ${runtime(process.uptime())} 
> Version : 2.0.0
                                                                                                  
üêº Have A Nice Day üêº

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `





          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `I'm Alive Now üë®‚Äçüíª`,
              body: `https://HYPER-md-main-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });

















cmd({
      pattern: "allmenu",
      alias: ["panel"],
      desc: "Get Bot Menu",
      category: "main",
      react: "üìÅ",
      filename: __filename
},
    
    async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{
    
let menu = {
main: '',
download: '',
movie: '',
group: '',
owner: '',
convert: '',
news: '',
ai: '',
tools: '',
search: '',
fun: '',
voice: '',
other: ''
};

for (let i = 0; i < commands.length; i++) {
if (commands[i].pattern && !commands[i].dontAddCommandList) {
menu[commands[i].category] += `.${commands[i].pattern}\n`;
 }
}

          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent


          let desc = `üëã Hello ${pushname}
          
‚ï≠‚îÄ„Äå ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥ò·¥Ä…¥·¥á ü „Äç
‚îÇ‚óà  Ä·¥ú…¥·¥õ…™·¥ç·¥á : ${runtime(process.uptime())}
‚îÇ‚óà  Ä·¥Ä·¥ç ·¥úÍú±·¥Ä…¢·¥á : ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB
‚îÇ‚óà ·¥ò ü·¥Ä·¥õÍú∞·¥è Ä·¥ç : ${os.hostname()}
‚îÇ‚óà ·¥†·¥á ÄÍú±…™·¥è…¥ : 2.0.0
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üì• ùêÉùê®ùê∞ùêßùê•ùê®ùêöùêù ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.download}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üé¨ ùêåùê®ùêØùê¢ùêû ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.movie}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üëæ ùêÄùê¢ ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.ai}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üîß ùêåùêöùê¢ùêß ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.main}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üéâ ùêÖùêÆùêß ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.fun}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üîÑ ùêÇùê®ùêßùêØùêûùê´ùê≠ ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.convert}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üîç ùêíùêûùêöùê´ùêúùê° ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.search}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üë• ùêÜùê´ùê®ùêÆùê© ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.group}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üîí ùêéùê∞ùêßùêûùê´ ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.owner}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 ‚öôÔ∏è ùêéùê≠ùê°ùêûùê´ ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.other}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üõ†Ô∏è ùêìùê®ùê®ùê•ùê¨ ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.tools}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üì∞ ùêçùêûùê∞ùê¨ ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.news}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
 üåå ùêãùê®ùê†ùê® ùêåùêûùêßùêÆ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ${menu.logo}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `





          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `HYPER-MD All Menu List`,
              body: `https://HYPER-md-main-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });


cmd({
      pattern: "owner",
      desc: "Chek Bot Owner",
      category: "main",
      react: "üë®‚Äçüíª",
      filename: __filename
    },
    
    async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
    try{
 
          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent


          let desc = `üëã Hello ${pushname}

> ùó¢ùó™ùó°ùóòùó• ùóúùó°ùóôùó¢ 

‚ö°·¥è·¥°…¥·¥á Ä …¥·¥Ä·¥ç·¥á -: Mr Senesh Amantha (kevin)
‚ö°…¥·¥ú·¥ç ô·¥á Ä -: 94784337506
‚ö° è·¥è·¥ú·¥õ·¥ú ô·¥á -: 
‚ö°·¥° ú·¥Ä·¥õÍú±·¥Ä·¥ò·¥ò ·¥Ñ ú·¥Ä…¥…¥·¥á ü-: 

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `





          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `HYPER-MD Owner Information`,
              body: `https://HYPER-tech-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });


cmd({
      pattern: "support",
      desc: "To get the bot informations.",
      category: "main",
      react: "‚õì",
      filename: __filename
    },
    
    async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
    try{
 
          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent


          let desc = `üëã Hello ${pushname}

üë®‚ÄçüíªHYPER-MD-V1 Support Channelsüíó

Youtube Channel Link: 

Whatsapp Channel Link: 

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `





          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `HYPER-MD Support Channels`,
              body: `https://HYPER-md-main-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });


cmd({
      pattern: "repo",
      desc: "To get the repo informations.",
      category: "main",
      react: "üì°",
      filename: __filename
    },
    
    async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
    try{
 
          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent


          let desc = `üëã Hello ${pushname}
          
üìçùñ±ùñæùóâùóà ùñ´ùóÇùóáùóÑ ‚ù§Ô∏è‚Äçüî•üëá

üë®‚Äçüíª‚ó¶ 

üìçùñØùóÖùñæùñ∫ùóåùñæ ùñ≤ùóéùñªùóåùñºùóãùóÇùñªùñæ ùñ¨ùóí ùñ∏ùóàùóéùóçùóéùñªùñæ ùñ¢ùóÅùñ∫ùóáùóáùñæùóÖ üëá

üë®‚Äçüíª‚ó¶ 

üìçùñØùóÖùñæùñ∫ùóåùñæ ùñ•ùóàùóÖùóÖùóàùóê ùñ¨ùóí ùñ∂ùóÅùñ∫ùóçùóåùñ∫ùóâùóâ ùñ¢ùóÅùñ∫ùóáùóáùñæùóÖ üëá

üë®‚Äçüíª‚ó¶ 

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `





          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `HYPER-MD Repo Informations`,
              body: ``,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });


cmd({
      pattern: "about",
      desc: "To get the bot informations.",
      category: "main",
      react: "‚ÑπÔ∏è",
      filename: __filename
    },
    
    async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
    try{

          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent


          let desc = `üëã ùêáùêÑùêãùêãùêéùêñ ùêìùêáùêÑùêàùêë ${senderNumber}

ùêà ùêÄùêå ùêíùêÄùêáùêÄùêí-ùêåùêÉ ùêñùêáùêÄùêìùêíùêÄùêèùêè ùêÅùêéùêì

ùêÇùêëùêÑùêÄùêìùêÑùêÉ ùêÅùêò ùêíùêÄùêáùêÄùêí ùêìùêÑùêÇùêá (ùêíùêÑùêçùêÑùêíùêá ùêÄùêåùêÄùêçùêìùêáùêÄ)..
           
…¢…™·¥õ ú·¥ú ô : 
             
 è·¥è·¥ú·¥õ·¥ú ô·¥á : 
      
·¥° ú·¥Ä·¥õÍú±·¥Ä·¥ò·¥ò ·¥Ñ ú·¥Ä…¥…¥·¥á ü : 

THANK FOR USING HYPER-MD`





          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `HYPER-MD About`,
              body: `https://HYPER-md-main-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });


cmd({
      pattern: "system",
      alias: ["status", "botinfo"],
      desc: "Check uptime, RAM usage, CPU info, and more",
      category: "main",
      react: "üß¨",
      filename: __filename
    }, async (conn, mek, m, { from, reply }) => {
      try {

          // System and memory information
          const uptime = runtime(process.uptime());
          const memoryUsage = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
          const totalMemory = Math.round(os.totalmem() / 1024 / 1024);
          const cpuArch = os.arch();
          const cpuCores = os.cpus().length;
          const systemType = os.type();
          const freeMemory = (os.freemem() / 1024 / 1024).toFixed(2);

          // Custom message for Render platform
          let platformMessage = '';
          if (platformName === 'Render') {
              platformMessage = '\nüåü You are currently hosting on Render! Enjoy seamless deployments.';
          }

          // Status message to be sent
        
          
          let desc = `‰πÇ HYPER-MD-V2 SYSTEM INFORMATION

‚è∞ùñ±ùóéùóáùóçùóÇùóÜùñæ:-  ${runtime(process.uptime())}    
üìüùñ±ùñ∫ùóÜ ùñ¥ùóåùñ∫ùóÄùñæ:- ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB
‚öôÔ∏èùñØùóÖùñ∫ùóçùñøùóàùóãùóÜ:- ${os.hostname()}
üë®‚ÄçüíªùñÆùóêùóáùñæùóã:- ùñ≤ùñ∫ùóÅùñ∫ùóå Tech   
üëæùñµùñæùóãùóåùóÇùóàùóá:- 2.0.0

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `

       

          

          // Sending the image with caption
          const sentMsg = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `HYPER-MD System Information`,
              body: `https://HYPER-md-main-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

      } catch (e) {
          console.error(e);
          reply(`Error: ${e.message}`);
      }
    });


cmd({
    pattern: "ping",
    desc: "Check bot's response time.",
    category: "main",
    react: "ü™Ñ",
    filename: __filename
}, async (conn, mek, m, { from, quoted, reply }) => {
    try {
 
        const startTime = Date.now();
        const message = await conn.sendMessage(from, { text: '```Pinging To index.js!!!```' });
        const endTime = Date.now();
        const ping = endTime - startTime;

        // Send the ping response without buttons
        await conn.sendMessage(from, { text: `üìç Pong : ${ping}ms` }, { quoted: message })
    } catch (e) {
        console.error(e);
        reply(`${e}`);
  }
});

//menu cmd

cmd({
    pattern: "menu",
    alias: ["list"],
    desc: "menu the bot",
    react: "üìú",
    category: "main"
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let desc = `üëã Hello ${pushname}

‚ï≠‚îÄ„Äå ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥ò·¥Ä…¥·¥á ü„Äç
‚îÇ‚óà  Ä·¥ú…¥·¥õ…™·¥ç·¥á : ${runtime(process.uptime())}
‚îÇ‚óà  Ä·¥Ä·¥ç ·¥úÍú±·¥Ä…¢·¥á : ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB
‚îÇ‚óà ·¥ò ü·¥Ä·¥õÍú∞·¥è Ä·¥ç : ${os.hostname()}
‚îÇ‚óà ·¥†·¥á ÄÍú±…™·¥è…¥ : 1.0.0
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫

‚ï≠‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº
‚îú 1 ‚Ä¢ OWNER
‚îú 2 ‚Ä¢ CONVERT
‚îú 3 ‚Ä¢ AI
‚îú 4 ‚Ä¢ SEARCH
‚îú 5 ‚Ä¢ DOWNLOAD
‚îú 6 ‚Ä¢ MAIN
‚îú 7 ‚Ä¢ GROUP
‚îú 8 ‚Ä¢ FUN
‚îú 9 ‚Ä¢ MOVIE
‚îú 10 ‚Ä¢ OTHER
‚îú 11 ‚Ä¢ NEWS
‚îú 12 ‚Ä¢ TOOLS
‚îú 13 ‚Ä¢ LOGO
‚ï∞‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº‚ïº

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
‚îù‚ùç TOTAL COMMANDS : 182
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

_üåü Reply with the Number you want to select_

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `;

                  // Sending the image with caption
          const vv = await conn.sendMessage(from, {


          text: desc,
          contextInfo: {

          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
          newsletterName: 'HYPER-MD',
          newsletterJid: "120363296605464049@newsletter",
          },
          externalAdReply: {
              title: `HYPER-MD Menu List`,
              body: `https://HYPER-md-main-web.vercel.app/`,
              thumbnailUrl: `https://pomf2.lain.la/f/uzu4feg.jpg`,
              sourceUrl: ``,
              mediaType: 1,
              renderLargerThumbnail: true
              }
                  }
              }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();

            if (msg.message.extendedTextMessage.contextInfo && msg.message.extendedTextMessage.contextInfo.stanzaId === vv.key.id) {
                switch (selectedOption) {
                    case '1':
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üîí ùêéùê∞ùêßùêûùê´ ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .join
‚îù‚ùç .restart
‚îù‚ùç .shutdown
‚îù‚ùç .broadcast
‚îù‚ùç .setpp
‚îù‚ùç .block
‚îù‚ùç .unblock
‚îù‚ùç .clearchats
‚îù‚ùç .startnews
‚îù‚ùç .stopnews
‚îù‚ùç .jid
‚îù‚ùç .gjid
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                        break;
                    case '2':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üîÑ ùêÇùê®ùêßùêØùêûùê´ùê≠ ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç  .convert
‚îù‚ùç .sticker2
‚îù‚ùç .tts
‚îù‚ùç .qmake
‚îù‚ùç .readmore
‚îù‚ùç .sticker
‚îù‚ùç .vv
‚îù‚ùç .circle
‚îù‚ùç .crop
‚îù‚ùç .round
‚îù‚ùç .toaudio
‚îù‚ùç .toanime
‚îù‚ùç .currency
‚îù‚ùç .url
‚îù‚ùç .img2url
‚îù‚ùç .trt
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                        break;
                    case '3':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üëæ ùêÄùê¢ ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .ai
‚îù‚ùç .bing
‚îù‚ùç .copilot
‚îù‚ùç .blackbox
‚îù‚ùç .bingimgai
‚îù‚ùç .gemini
‚îù‚ùç .gpt4
‚îù‚ùç .laland
‚îù‚ùç .obfus
‚îù‚ùç .prodia
‚îù‚ùç .prodia2
‚îù‚ùç .texttoimg1
‚îù‚ùç .texttoimg2
‚îù‚ùç .texttoimg3
‚îù‚ùç .aemtv1
‚îù‚ùç .aemtv2
‚îù‚ùç .aemtv3
‚îù‚ùç .aemtv4
‚îù‚ùç .aemtv5
‚îù‚ùç .aemtv6
‚îù‚ùç .aemtv7
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                        break;
                    case '4':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üîç ùêíùêûùêöùê´ùêúùê° ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .lyric 
‚îù‚ùç .yts
‚îù‚ùç .srepo
‚îù‚ùç .weather1
‚îù‚ùç .tiktoksearch
‚îù‚ùç .horo
‚îù‚ùç .google
‚îù‚ùç .couplepp
‚îù‚ùç .snumber
‚îù‚ùç .weather
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                        break;
                    case '5':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üì• ùêÉùê®ùê∞ùêßùê•ùê®ùêöùêù ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .song2
‚îù‚ùç .video
‚îù‚ùç .fb
‚îù‚ùç .tt
‚îù‚ùç .gdrive
‚îù‚ùç .apkdl
‚îù‚ùç .twitter
‚îù‚ùç .apk
‚îù‚ùç .img
‚îù‚ùç .mfire
‚îù‚ùç .scloud
‚îù‚ùç .song
‚îù‚ùç .xnxx
‚îù‚ùç .xvideo
‚îù‚ùç .mega
‚îù‚ùç .gitclone
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                        break;
                    case '6':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üîß ùêåùêöùê¢ùêß ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç  .runtime
‚îù‚ùç .alive
‚îù‚ùç .allmenu
‚îù‚ùç .owner
‚îù‚ùç .support
‚îù‚ùç .repo
‚îù‚ùç .about
‚îù‚ùç .system
‚îù‚ùç .ping
‚îù‚ùç .allmenu
‚îù‚ùç .menu
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                        break;
                    case '7':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üë• ùêÜùê´ùê®ùêÆùê© ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .mute
‚îù‚ùç .unmute
‚îù‚ùç .promote
‚îù‚ùç .demote
‚îù‚ùç .del
‚îù‚ùç .add
‚îù‚ùç .setgoodbye
‚îù‚ùç .setwelcome
‚îù‚ùç .admins
‚îù‚ùç .groupdesc
‚îù‚ùç .groupinfo
‚îù‚ùç .grouplink
‚îù‚ùç .gname
‚îù‚ùç .setsubject
‚îù‚ùç .tagall
‚îù‚ùç .requests
‚îù‚ùç .accept
‚îù‚ùç .reject
‚îù‚ùç .hidetag
‚îù‚ùç .kick
‚îù‚ùç .unlock
‚îù‚ùç .lock
‚îù‚ùç .approve
‚îù‚ùç .poll
‚îù‚ùç .getpic
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                       break;
                    case '8':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üéâ ùêÖùêÆùêß ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .animegirl
‚îù‚ùç .dog
‚îù‚ùç .fact
‚îù‚ùç .hack
‚îù‚ùç .insult
‚îù‚ùç .joke
‚îù‚ùç .quote
‚îù‚ùç .ronaldo
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);

                        break;
                    case '9':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üé¨ ùêåùê®ùêØùê¢ùêû ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .movie
‚îù‚ùç .jshare (Íú±…™…¥ ú·¥Ä ü·¥Ä Íú±·¥ú ô ·¥ç·¥è·¥†…™·¥á ·¥ä…™·¥Ö Íú± ú·¥Ä Ä·¥á)
‚îù‚ùç .uploadme
‚îù‚ùç .ytsmx
‚îù‚ùç .uploadmovie
‚îù‚ùç .moviekv
‚îù‚ùç .uploadtv
‚îù‚ùç .uploadtvm
‚îù‚ùç .uploadmoviem
‚îù‚ùç .uploadzip
‚îù‚ùç .uploadzipn
‚îù‚ùç .uploadzipfile
‚îù‚ùç .imdb
‚îù‚ùç .gdmovie
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);

                    break;
                    case '10':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 ‚öôÔ∏è ùêéùê≠ùê°ùêûùê´ ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .anime1
‚îù‚ùç .anime2
‚îù‚ùç .anime3
‚îù‚ùç .anime4
‚îù‚ùç .anime5
‚îù‚ùç .loli
‚îù‚ùç .waifu
‚îù‚ùç .neko
‚îù‚ùç .megumin
‚îù‚ùç .maid
‚îù‚ùç .awoo
‚îù‚ùç .define
‚îù‚ùç .githubstalk
‚îù‚ùç .gpass
‚îù‚ùç .wiki
‚îù‚ùç .ss
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);

                    break;
                    case '11':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üì∞ ùêçùêûùê∞ùê¨ ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .hirunews
‚îù‚ùç .sirasanews
‚îù‚ùç .derananews
‚îù‚ùç .lankadeepanews
‚îù‚ùç .bbcnews
‚îù‚ùç .ios
‚îù‚ùç .esananews
‚îù‚ùç .technews
‚îù‚ùç .wabeta
‚îù‚ùç .news
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);

                    break;
                    case '12':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üõ†Ô∏è ùêìùê®ùê®ùê•ùê¨ ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .bass
‚îù‚ùç .blown
‚îù‚ùç .deep
‚îù‚ùç .fast
‚îù‚ùç .reverse2
‚îù‚ùç .calc
‚îù‚ùç .translate
‚îù‚ùç .reverse
‚îù‚ùç .tempmail
‚îù‚ùç .checkmail
‚îù‚ùç .delmail
‚îù‚ùç .encode
‚îù‚ùç .decode
‚îù‚ùç .npmstalk
‚îù‚ùç .iplookup
‚îù‚ùç .instastalk
‚îù‚ùç .githubuser
‚îù‚ùç .password
‚îù‚ùç .hijact
‚îù‚ùç .antispam
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);

                    break;
                    case '13':               
                        reply(`‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£
 üåå ùêãùê®ùê†ùê® ùêåùêûùêßùêÆ
‚îù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚ùç‚ùç‚ùç
‚îù‚ùç .logo1
‚îù‚ùç .logo2
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç‚ùç‚û£

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ç Ä Íú±·¥á…¥·¥áÍú± ú `);
                        break;
                    default:
                        reply("Invalid option. Please select a valid optionüî¥");
                }

            }
        });

    } catch (e) {
        console.error(e);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } })
        reply('An error occurred while processing your request.');
    }
});
